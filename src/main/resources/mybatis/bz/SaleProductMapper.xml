<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.modules.bz.saleProduct.dao.SaleProductDao">

	<select id="get" resultType="com.bootdo.modules.bz.saleProduct.domain.SaleProductDO">
		select `ID`,`product_name`,`product_code`,`g_com_code`,`product_price`,`min_price`,`max_price`,`retail_com_code`,`state`,`validate_state`,`create_date`,`edit_date`,`start_date`,`end_date` from sale_product where ID = #{value}
	</select>

	<select id="list" resultType="com.bootdo.modules.bz.saleProduct.domain.SaleProductDO">
		select `ID`,`product_name`,`product_code`,`g_com_code`,`product_price`,`min_price`,`max_price`,`retail_com_code`,`state`,`validate_state`,`create_date`,`edit_date`,`start_date`,`end_date` from sale_product
        <where>  
		  		  <if test="id != null and id != ''"> and ID = #{id} </if>
		  		  <if test="productName != null and productName != ''"> and product_name = #{productName} </if>
		  		  <if test="productCode != null and productCode != ''"> and product_code = #{productCode} </if>
		  		  <if test="gComCode != null and gComCode != ''"> and g_com_code = #{gComCode} </if>
		  		  <if test="productPrice != null and productPrice != ''"> and product_price = #{productPrice} </if>
		  		  <if test="minPrice != null and minPrice != ''"> and min_price = #{minPrice} </if>
		  		  <if test="maxPrice != null and maxPrice != ''"> and max_price = #{maxPrice} </if>
		  		  <if test="retailComCode != null and retailComCode != ''"> and retail_com_code = #{retailComCode} </if>
		  		  <if test="state != null and state != ''"> and state = #{state} </if>
		  		  <if test="validateState != null and validateState != ''"> and validate_state = #{validateState} </if>
		  		  <if test="createDate != null and createDate != ''"> and create_date = #{createDate} </if>
		  		  <if test="editDate != null and editDate != ''"> and edit_date = #{editDate} </if>
		  		  <if test="startDate != null and startDate != ''"> and start_date = #{startDate} </if>
		  		  <if test="endDate != null and endDate != ''"> and end_date = #{endDate} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from sale_product
		 <where>  
		  		  <if test="id != null and id != ''"> and ID = #{id} </if>
		  		  <if test="productName != null and productName != ''"> and product_name = #{productName} </if>
		  		  <if test="productCode != null and productCode != ''"> and product_code = #{productCode} </if>
		  		  <if test="gComCode != null and gComCode != ''"> and g_com_code = #{gComCode} </if>
		  		  <if test="productPrice != null and productPrice != ''"> and product_price = #{productPrice} </if>
		  		  <if test="minPrice != null and minPrice != ''"> and min_price = #{minPrice} </if>
		  		  <if test="maxPrice != null and maxPrice != ''"> and max_price = #{maxPrice} </if>
		  		  <if test="retailComCode != null and retailComCode != ''"> and retail_com_code = #{retailComCode} </if>
		  		  <if test="state != null and state != ''"> and state = #{state} </if>
		  		  <if test="validateState != null and validateState != ''"> and validate_state = #{validateState} </if>
		  		  <if test="createDate != null and createDate != ''"> and create_date = #{createDate} </if>
		  		  <if test="editDate != null and editDate != ''"> and edit_date = #{editDate} </if>
		  		  <if test="startDate != null and startDate != ''"> and start_date = #{startDate} </if>
		  		  <if test="endDate != null and endDate != ''"> and end_date = #{endDate} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.modules.bz.saleProduct.domain.SaleProductDO">
		insert into sale_product
		(
			`ID`, 
			`product_name`, 
			`product_code`, 
			`g_com_code`, 
			`product_price`, 
			`min_price`, 
			`max_price`, 
			`retail_com_code`, 
			`state`, 
			`validate_state`, 
			`create_date`, 
			`edit_date`, 
			`start_date`, 
			`end_date`
		)
		values
		(
			uuid(), 
			#{productName}, 
			#{productCode}, 
			#{gComCode}, 
			#{productPrice}, 
			#{minPrice}, 
			#{maxPrice}, 
			#{retailComCode}, 
			#{state}, 
			'1', 
			now(), 
			null, 
			#{startDate}, 
			#{endDate}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.modules.bz.saleProduct.domain.SaleProductDO">
		update sale_product 
		<set>
			<if test="productName != null">`product_name` = #{productName}, </if>
			<if test="productCode != null">`product_code` = #{productCode}, </if>
			<if test="gComCode != null">`g_com_code` = #{gComCode}, </if>
			<if test="productPrice != null">`product_price` = #{productPrice}, </if>
			<if test="minPrice != null">`min_price` = #{minPrice}, </if>
			<if test="maxPrice != null">`max_price` = #{maxPrice}, </if>
			<if test="retailComCode != null">`retail_com_code` = #{retailComCode}, </if>
			<if test="state != null">`state` = #{state}, </if>
			<if test="validateState != null">`validate_state` = #{validateState}, </if>
			<if test="createDate != null">`create_date` = #{createDate}, </if>
			<if test="editDate != null">`edit_date` = #{editDate}, </if>
			<if test="startDate != null">`start_date` = #{startDate}, </if>
			`end_date` = now()
		</set>
		where ID = #{id}
	</update>
	
	<delete id="remove">
		delete from sale_product where ID = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from sale_product where ID in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>