<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.modules.bz.account.dao.AccountDao">

	<select id="get" resultType="com.bootdo.modules.bz.account.domain.AccountDO">
		select `ID`,`com_code`,`account_code`,`balance`,`cou_balance`,`cre_balance`,`ice_amount`,`rec_balance`,`create_date`,`edite_date`,`validate_state` from account where ID = #{value}
	</select>

	<select id="list" resultType="com.bootdo.modules.bz.account.domain.AccountDO">
		select `ID`,`com_code`,`account_code`,`balance`,`cou_balance`,`cre_balance`,`ice_amount`,`rec_balance`,`create_date`,`edite_date`,`validate_state` from account
        <where>  
		  		  <if test="id != null and id != ''"> and ID = #{id} </if>
		  		  <if test="comCode != null and comCode != ''"> and com_code = #{comCode} </if>
		  		  <if test="accountCode != null and accountCode != ''"> and account_code = #{accountCode} </if>
		  		  <if test="balance != null and balance != ''"> and balance = #{balance} </if>
		  		  <if test="couBalance != null and couBalance != ''"> and cou_balance = #{couBalance} </if>
		  		  <if test="creBalance != null and creBalance != ''"> and cre_balance = #{creBalance} </if>
		  		  <if test="iceAmount != null and iceAmount != ''"> and ice_amount = #{iceAmount} </if>
		  		  <if test="recBalance != null and recBalance != ''"> and rec_balance = #{recBalance} </if>
		  		  <if test="createDate != null and createDate != ''"> and create_date = #{createDate} </if>
		  		  <if test="editeDate != null and editeDate != ''"> and edite_date = #{editeDate} </if>
		  		  <if test="validateState != null and validateState != ''"> and validate_state = #{validateState} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by ID desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from account
		 <where>  
		  		  <if test="id != null and id != ''"> and ID = #{id} </if>
		  		  <if test="comCode != null and comCode != ''"> and com_code = #{comCode} </if>
		  		  <if test="accountCode != null and accountCode != ''"> and account_code = #{accountCode} </if>
		  		  <if test="balance != null and balance != ''"> and balance = #{balance} </if>
		  		  <if test="couBalance != null and couBalance != ''"> and cou_balance = #{couBalance} </if>
		  		  <if test="creBalance != null and creBalance != ''"> and cre_balance = #{creBalance} </if>
		  		  <if test="iceAmount != null and iceAmount != ''"> and ice_amount = #{iceAmount} </if>
		  		  <if test="recBalance != null and recBalance != ''"> and rec_balance = #{recBalance} </if>
		  		  <if test="createDate != null and createDate != ''"> and create_date = #{createDate} </if>
		  		  <if test="editeDate != null and editeDate != ''"> and edite_date = #{editeDate} </if>
		  		  <if test="validateState != null and validateState != ''"> and validate_state = #{validateState} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.modules.bz.account.domain.AccountDO">
		insert into account
		(
			`ID`, 
			`com_code`, 
			`account_code`, 
			`balance`, 
			`cou_balance`, 
			`cre_balance`, 
			`ice_amount`, 
			`rec_balance`, 
			`create_date`, 
			`edite_date`, 
			`validate_state`
		)
		values
		(
			uuid(), 
			#{comCode}, 
			#{accountCode}, 
			0, 
			0, 
			0, 
			0, 
			0, 
			now(), 
			null, 
			'1'
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.modules.bz.account.domain.AccountDO">
		update account 
		<set>
			<if test="comCode != null">`com_code` = #{comCode}, </if>
			<if test="accountCode != null">`account_code` = #{accountCode}, </if>
			<if test="balance != null">`balance` = #{balance}, </if>
			<if test="couBalance != null">`cou_balance` = #{couBalance}, </if>
			<if test="creBalance != null">`cre_balance` = #{creBalance}, </if>
			<if test="iceAmount != null">`ice_amount` = #{iceAmount}, </if>
			<if test="recBalance != null">`rec_balance` = #{recBalance}, </if>
			<if test="createDate != null">`create_date` = #{createDate}, </if>
			<if test="editeDate != null">`edite_date` = #{editeDate}, </if>
			<if test="validateState != null">`validate_state` = #{validateState}</if>
		</set>
		where ID = #{id}
	</update>
	
	<delete id="remove">
		delete from account where ID = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from account where ID in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>